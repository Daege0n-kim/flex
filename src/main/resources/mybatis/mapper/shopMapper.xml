<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pg.flex.dao.shop.ShopDao">

  <resultMap id="ProductResultMap" type="com.pg.flex.dto.Product">
    <result column="product_index" property="productIndex" />
    <result column="product_name" property="productName" />
    <result column="brand_name" property="productBrand" />
    <result column="product_price" property="productPrice" />
    <result column="category_name" property="categoryName" />
  </resultMap>

  <select id="getProducts" resultMap="ProductResultMap">
    SELECT
      p.product_index,
      p.product_name,
      b.brand_name,
      p.product_price,
      c.category_name
    FROM
      product AS p
    INNER JOIN
      category AS c
    ON
      p.category_index = c.category_index
    INNER JOIN
      brand AS b
    ON
      p.product_brand=b.brand_index
    LIMIT 4 OFFSET 0
  </select>

  <!-- 상품상세 페이지(1개씩 가져오기) -->

  <select id="getProductByProductIndex" parameterType="int" resultMap="ProductResultMap">
    SELECT
      p.product_index,
      p.product_name,
      b.brand_name,
      p.product_price
    FROM
      product AS p
      
    INNER JOIN
      brand AS b
    ON
      p.product_brand=b.brand_index
    where
      p.product_index=#{productIndex}
    
  </select>


  <!-- Mypage에 관련상품선택 API -->

<select id="getProductsRelation" parameterType="string" resultMap="ProductResultMap">
  SELECT
	  p.product_index,
	  p.product_name,
	  b.brand_name
  FROM
	  product AS p

  INNER JOIN 
    brand AS b
  ON
	  p.product_brand=b.brand_index
<if test="#{search} != null"> 
  WHERE 
	  p.product_name=#{search} 
  OR
	  b.brand_name=#{search} 
</if>
  </select>

</mapper>