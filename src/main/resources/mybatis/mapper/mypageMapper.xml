<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pg.flex.dao.mypage.MyPage">

<resultMap id="ProductResultMap" type="com.pg.flex.dto.response.UserDetailResponse">
  <result column="login_id" property="loginId" />
  <result column="name" property="name" />
  <result column="search_id" property="searchId" />
  <result column="saved_file_name" property="savedFileName" />
  <result column="total_price" property="totalPrice" />
</resultMap>

  <resultMap id="SearchedProductResultMap" type="com.pg.flex.dto.response.ProductResponse">
    <result column="product_index" property="productIndex" />
    <result column="product_name" property="productName" />
    <result column="product_price" property="productPrice" />
    <result column="thumb_saved_file_name" property="thumbSavedFileName" />
    <result column="detail_saved_file_name" property="detailSavedFileName" />
    <result column="category_index" property="categoryIndex" />
    <result column="brand_index" property="brandIndex" />
    <result column="gender_index" property="genderIndex" />
    <result column="category_name" property="categoryName" />
    <result column="brand_name" property="brandName" />
    <result column="gender_name" property="genderName" />
    <result column="like_index" property="likeIndex" />
  </resultMap>

<resultMap id="DeliveryResponseMap" type="com.pg.flex.dto.response.DeliveryResponse">
  <result column="delivery_index" property="deliveryIndex" />
  <result column="delivery_address" property="deliveryAddress" />
  <result column="user_id" property="userId" />
  <result column="address_name" property="addressName" />
  <result column="is_default" property="isDefault" />
</resultMap>

<resultMap id="PaymentResponseMap" type="com.pg.flex.dto.response.PaymentResponse">
  <result column="payment_index" property="paymentIndex" />
  <result column="payment_bank" property="paymentBank" />
  <result column="account" property="account" />
  <result column="is_default" property="isDefault" />
  <result column="user_id" property="userId" />
  <result column="cvc" property="cvc" />
</resultMap>

<resultMap id="CartMap" type="com.pg.flex.dto.response.Cart">
  <result column="cart_index" property="cartIndex"/>
  <result column="product_index" property="productIndex"/>
  <result column="thumb_saved_file_name" property="thumbSavedFileName"/>
  <result column="product_brand" property="productBrand"/>
  <result column="product_name" property="productName"/>
  <result column="product_price" property="productPrice"/>
  <result column="cart_count" property="cartCount"/>
</resultMap>

<resultMap id="LikeMap" type="com.pg.flex.dto.response.Like">
  <result column="like_index" property="likeIndex"/>
  <result column="product_index" property="productIndex"/>
  <result column="thumb_saved_file_name" property="thumbSavedFileName"/>
  <result column="brand_name" property="brandName"/>
  <result column="product_name" property="productName"/>
  <result column="product_price" property="productPrice"/>
</resultMap>

<resultMap id="LikeResponseMap" type="com.pg.flex.dto.response.LikeResponse">
  <result column="like_index" property="likeIndex"/>
  <result column="product_index" property="productIndex"/>
  <result column="user_id" property="userId"/>
</resultMap>

<resultMap id="CartResponseMap" type="com.pg.flex.dto.response.CartResponseWithPrice">
  <result column="cart_index" property="cartIndex" />
  <result column="product_index" property="productIndex" />
  <result column="user_id" property="userId" />
  <result column="product_price" property="productPrice" />
</resultMap>

<resultMap id="OrderedMap" type="com.pg.flex.dto.response.OrderedResponse">
  <result column="thumb_saved_file_name" property="thumbSavedFileName" />
  <result column="brand_name" property="brandName" />
  <result column="product_name" property="productName" />
  <result column="count" property="count" />
  <result column="product_price" property="productPrice" />
  <result column="status" property="status" />
  <result column="created_date" property="createdDate" />
</resultMap>

  <select id="getUserDetail" parameterType="string" resultMap="ProductResultMap">
    SELECT 
      user.login_id,
      user.name,
      user.search_id,
      user.saved_file_name,
      (
        SUM(product.product_price * purchase.count)
      ) AS total_price
    FROM 
      user AS user
    INNER JOIN
      purchase AS purchase
    ON
      user.login_id = purchase.user_id
    INNER JOIN
      product AS product
    ON
      purchase.product_index = product.product_index
    WHERE 
      user.login_id = #{loginId}
  </select>


  <!-- Delivery -->
  <select id="getDeliveryAddress" parameterType="string" resultMap="DeliveryResponseMap">
    SELECT
      delivery_index,
      delivery_address,
      user_id,
      address_name,
      is_default
    FROM
      delivery_address
    WHERE
      user_id = #{userId}
  </select>

  <insert id="postDeliveryAddress" parameterType="com.pg.flex.dto.request.DeliveryAddressRequestForm">
    INSERT INTO
      delivery_address (delivery_address, user_id, address_name, is_default)
    VALUES
      (#{deliveryAddress}, #{userId}, #{addressName}, #{isDefault})
  </insert>

  <update id="fetchDeliveryAddress" parameterType="com.pg.flex.dto.request.DeliveryAddressRequestForm">
    UPDATE 
      delivery_address
    SET
      is_default = #{isDefault}
    WHERE
      delivery_index = #{deliveryIndex}
  </update>

  <update id="updateDeliveryAddress" parameterType="com.pg.flex.dto.request.DeliveryAddressRequestForm">
    UPDATE
      delivery_address
    SET
      is_default = 1
    WHERE
      delivery_index = #{deliveryIndex}
  </update>

  <delete id="deleteDeliveryAddress">
    DELETE FROM
      delivery_address
    WHERE
      delivery_index = #{deliveryIndex}
  </delete>

  <!-- Delivery -->


  <!-- Payment -->
  <select id="getPaymentsByUserId" parameterType="string" resultMap="PaymentResponseMap">
    SELECT
      payment_index,
      payment_bank,
      account,
      is_default,
      user_id,
      cvc
    FROM
      payment
    WHERE 
      user_id = #{userId}
  </select>

  <insert id="postPayment" parameterType="com.pg.flex.dto.request.PaymentRequestForm">
    INSERT INTO
      payment (payment_bank, account, is_default, user_id, cvc)
    VALUES
      (#{paymentBank}, #{account}, #{isDefault}, #{userId}, #{cvc})
  </insert>

  <delete id="deletePayment" parameterType="com.pg.flex.dto.request.PaymentRequestForm">
    DELETE FROM
      payment
    WHERE
      payment_index = #{paymentIndex}
  </delete>

  <update id="fetchPayment" parameterType="com.pg.flex.dto.request.PaymentRequestForm">
    UPDATE
      payment
    SET
      is_default = #{isDefault}
    WHERE
      payment_index = #{paymentIndex}
  </update>
  <!-- Payment -->

  <select id="getCartList" parameterType="String" resultMap="CartMap"> 
    SELECT
      c.cart_index, 
      p.product_index, 
      p.thumb_saved_file_name, 
      b.brand_name AS product_brand, 
      p.product_name, 
      p.product_price, 
      c.cart_count 
    FROM 
      cart c 
    INNER JOIN
      user u 
    ON 
      c.user_id = u.login_id 
    INNER JOIN
      product p 
    ON 
      c.product_index = p.product_index
    INNER JOIN
      brand b 
    ON 
      p.brand = b.brand_index 
    WHERE
      u.login_id = #{userId}
  </select>

  <delete id="deleteCart" parameterType="int">
    DELETE FROM
      cart
    WHERE
      cart_index = #{cartIndex}
  </delete>

  <update id="increaseCart" parameterType="int">
    UPDATE 
      cart
    SET
      cart_count = cart_count + 1
    WHERE
      cart_index = #{cart_index}
  </update>

  <update id="decreaseCart" parameterType="int">
    UPDATE 
      cart
    SET
      cart_count = cart_count - 1
    WHERE
      cart_index = #{cart_index}
  </update>

  <select id="getCartCount" parameterType="int" resultType="int">
    SELECT
      cart_count
    FROM
      cart
    WHERE
      cart_index = #{cartIndex}
  </select>

  <select id="getLikesByUserId" parameterType="string" resultMap="LikeMap">
    SELECT
      l.like_index, 
      p.product_index,
      p.thumb_saved_file_name, 
      b.brand_name, 
      p.product_name, 
      p.product_name, 
      p.product_price
    FROM
      product_like l 
    INNER JOIN
      product p 
    ON 
      l.product_index = p.product_index 
    INNER JOIN
      brand b 
    ON 
      p.brand = b.brand_index 
    INNER JOIN 
      user u 
    ON 
      l.user_id = u.login_id 
    WHERE 
      l.user_id = #{userId}
  </select>

  <delete id="deleteFromLike" parameterType="int">
    DELETE FROM
      product_like
    WHERE
      like_index = #{likeIndex}
  </delete>

  <select id="getLikesByListIndex" parameterType="com.pg.flex.dto.request.AddToCartFromLike" resultMap="LikeResponseMap">
    SELECT
      like_index,
      product_index,
      user_id
    FROM
      product_like
    WHERE
      like_index 
    IN
      <foreach collection="list" item="item" open="(" close=")" separator=",">
        #{item.likeIndex}
      </foreach>
  </select>

  <delete id="deleteFromLikeAll" parameterType="com.pg.flex.dto.request.AddToCartFromLike">
    DELETE FROM
      product_like
    WHERE
      like_index 
    IN
      <foreach collection="list" item="item" open="(" close=")" separator=",">
        #{item.likeIndex}
      </foreach>
  </delete>

  <select id="getCartListByCartIndex" parameterType="com.pg.flex.dto.request.CartIndexForPurchase" resultMap="CartResponseMap">
    SELECT
      c.cart_index,
      c.product_index,
      c.user_id,
      p.product_price
    FROM
      cart c
    INNER JOIN
      product p
    ON
      c.product_index = p.product_index
    WHERE
      c.cart_index
    IN
      <foreach collection="list" item="item" open="(" close=")" separator=",">
        #{item.cartIndex}
      </foreach>
  </select>

  <select id="selectPaymentByPaymentIndex" parameterType="int" resultMap="PaymentResponseMap">
    SELECT
      *
    FROM
      payment
    WHERE
      payment_index = #{paymentIndex}
  </select>

  <update id="addTotalPrice" parameterType="com.pg.flex.dto.query.AddTotalPrice">
    UPDATE 
        user
      SET
        total_price = total_price + #{totalPrice}
      WHERE
        login_id = #{userId}
  </update>

  <insert id="insertPurchaseHistory" parameterType="com.pg.flex.dto.request.CartIndexForPurchase">
    INSERT INTO
      purchase (product_index, user_id, count)
    VALUES
      <foreach collection="list" item="item" separator=",">
        (#{item.productIndex}, #{item.userId}, #{item.count})
      </foreach>
  </insert>

  <select id="getOrderedList" parameterType="string" resultMap="OrderedMap">
    SELECT 
      product.thumb_saved_file_name,
      brand.brand_name,
      product.product_name,
      purchase.count,
      (product.product_price * purchase.count) AS product_price,
      purchase.status,
      DATE_FORMAT(purchase.created_date, '%Y.%m.%d') AS created_date
    FROM 
      purchase AS purchase
    INNER JOIN 
      user AS user
    ON
      purchase.user_id = user.login_id
    INNER JOIN
      product AS product
    ON
      purchase.product_index = product.product_index
    INNER JOIN 
      brand AS brand
    ON 
      product.brand = brand.brand_index
    WHERE 
      user.login_id = #{userId}
  </select>

  <update id="updateUserInform" parameterType="com.pg.flex.dto.query.UpdateUserInformQuery">
    UPDATE
      user
    SET
      name = #{name},
      search_id = #{searchId},
      saved_file_name = #{savedFileName}
    WHERE
      login_id = #{loginId}

  </update>

  <select id="searchProductBySearchKey" parameterType="string" resultMap="SearchedProductResultMap">
    SELECT
      p.product_index,
      p.product_name,
      p.product_price,
      P.thumb_saved_file_name,
      P.detail_saved_file_name,
      c.category_index,
      b.brand_index,
      g.gender_index,
      c.category_name,
      b.brand_name,
      g.gender_name
    FROM
      product AS p
    INNER JOIN
      category AS c
    ON
      p.category = c.category_index
    INNER JOIN
      brand AS b
    ON
      p.brand=b.brand_index
    INNER JOIN
      gender g
    ON
      p.gender = g.gender_index
    WHERE
      p.product_name like CONCAT('%',#{searchKey},'%')
    OR
      b.brand_name like CONCAT('%',#{searchKey},'%')
    OR
      c.category_name like CONCAT('%',#{searchKey},'%')
  </select>
</mapper>
    
